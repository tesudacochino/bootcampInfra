version: '3'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    container_name: traefik
    labels:
     - "traefik.enable=true"                             
     - "traefik.http.routers.api.service=api@internal"   
     - "traefik.http.routers.api.entrypoints=web"        
     - "traefik.http.routers.api.rule=Host(`traefik.$MY_DOMAIN`)"
     - "traefik.http.routers.api.middlewares=auth"                             # Tell our route to use a middleware named `auth`
     - "traefik.http.middlewares.auth.basicauth.usersfile=/etc/traefik/dashboard.pwd"

    networks:
      - net-proxy
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "442:442"
      # The Web UI (enabled by --api.insecure=true)
      # - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - $PD/traefik/etc/traefik:/etc/traefik:ro
      
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.rule=Host(`whoami.$MY_DOMAIN`)"
      - "traefik.http.routers.whoami.middlewares=auth-middleware"
      - "traefik.http.middlewares.auth-middleware.basicauth.usersfile=/etc/traefik/dashboard.pwd"
      # - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$uxqZzGz7$$UTlJ6U2F1KGUYreGsH4Yl/"
    networks:
      - net-proxy

  jenkins:
    build:
      context: build/jenkins
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jenkins"
      - "traefik.http.routers.jenkins.entrypoints=web"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.$MY_DOMAIN`)"
      - "traefik.docker.network=$DEFAULT_NETWORK"
      - "traefik.port=8080"
    restart: always
    #ports:
    #- "9000:8080"
    #- "50000:50000"
    volumes:
      - $PD/jenkins/var/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net-proxy
    
  registry:
    image: registry
    labels:
      - "traefik.enable=true"
      - "traefik.backend=registry"
      - "traefik.http.routers.registry.entrypoints=web"
      - "traefik.http.routers.registry.rule=Host(`registry.$MY_DOMAIN`)"
      - "traefik.docker.network=$DEFAULT_NETWORK"
      - "traefik.port=5000"
    restart: always
    volumes:
      - registry:/var/lib/registry
    ports:
      - 5000:5000
    networks:
      - net-proxy

#   lldap:
#     image: nitnelave/lldap:stable
#     ports:
#       # For LDAP
#       - "3890:3890"
#       # For the web front-end
#       - "17170:17170"
#     volumes:
#       - "lldap_data:/data"
#       # Alternatively, you can mount a local folder
#       # - "./lldap_data:/data"
#     environment:
#       - UID=####
#       - GID=####
#       - TZ=####/####
#       - LLDAP_JWT_SECRET=REPLACE_WITH_RANDOM
#       - LLDAP_LDAP_USER_PASS=REPLACE_WITH_PASSWORD
#       - LLDAP_LDAP_BASE_DN=dc=example,dc=com

# volumes:
#   lldap_data:
#     driver: local
volumes:
  registry: {}

networks:
  net-proxy:
    driver: bridge
    name: $DEFAULT_NETWORK
